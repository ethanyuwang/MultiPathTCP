Number of interfaces: 3 Hostname: 128.111.68.197, Port: 5176 Filename: testfile, 
Starting client..
File total size is: 1599
total_bytes: 8
interfaceRequest: MPREQ 3

--------SEND-SEND-SEND-SEND--------
dest port   : 5176
dest addr   : 128.111.68.197
src port    : 34433
src addr    : 192.168.126.135
seq_num     : 1
ack_num     : 0
total_bytes : 8
data        : MPREQ 3

--------------------------------------
size mp_sent: 0
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50276
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 1
ack_num     : 0
total_bytes : 23
data        : MPOK 47614:53353:45191
--------------------------------------
connected to: 47614
==============Thread 1:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 47614
dest addr   : 128.111.68.197
src port    : 59808
src addr    : 192.168.126.135
seq_num     : 1
ack_num     : 0
total_bytes : 1599
data        : The goal of this assignment will be to create an HTTP(S) proxy server to monitor traffic coming
applications make and observe th
--------------------------------------
connected to: 53353
connected to: 45191
==============Thread 1:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50277
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 0
ack_num     : 129
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 3:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 45191
dest addr   : 128.111.68.197
src port    : 45641
src addr    : 192.168.126.135
seq_num     : 129
ack_num     : 0
total_bytes : 1599
data        : e data that is being sent over the network. In addition, you will
be able to observe how different apps use and design their dif
--------------------------------------
==============Thread 3:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50278
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 1
ack_num     : 257
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 1:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 47614
dest addr   : 128.111.68.197
src port    : 59808
src addr    : 192.168.126.135
seq_num     : 257
ack_num     : 0
total_bytes : 1599
data        : ferent APIs to properly perform
their functions. As an extension, you will modify the responses for a specific application to
si
--------------------------------------
==============Thread 1:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50277
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 2
ack_num     : 385
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 3:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 45191
dest addr   : 128.111.68.197
src port    : 45641
src addr    : 192.168.126.135
seq_num     : 385
ack_num     : 0
total_bytes : 1599
data        : mulate a malicious attack that can be performed through such means.
Simple HTTP Proxy Server
A proxy is simply a server which si
--------------------------------------
==============Thread 3:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50278
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 3
ack_num     : 513
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 1:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 47614
dest addr   : 128.111.68.197
src port    : 59808
src addr    : 192.168.126.135
seq_num     : 513
ack_num     : 0
total_bytes : 1599
data        : ts in between a client and a destination and acts as a
middleÂ­man between the two. The client sends the proxy server a request 
--------------------------------------
==============Thread 1:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50277
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 4
ack_num     : 641
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 2:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 53353
dest addr   : 128.111.68.197
src port    : 37033
src addr    : 192.168.126.135
seq_num     : 641
ack_num     : 0
total_bytes : 1599
data        : and the proxy server
makes a request on behalf of the client to the destination. It then accepts the destinations
response and p
--------------------------------------
==============Thread 2:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50279
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 5
ack_num     : 769
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 3:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 45191
dest addr   : 128.111.68.197
src port    : 45641
src addr    : 192.168.126.135
seq_num     : 769
ack_num     : 0
total_bytes : 1599
data        : asses it along to the client. By doing so, a proxy server is able to sniff all of the
traffic that passes between the two partie
--------------------------------------
==============Thread 3:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50278
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 6
ack_num     : 897
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 1:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 47614
dest addr   : 128.111.68.197
src port    : 59808
src addr    : 192.168.126.135
seq_num     : 897
ack_num     : 0
total_bytes : 1599
data        : s.
Your proxy server will be functioning as a server, listening for incoming client requests at a
specified port.
To implement a
--------------------------------------
==============Thread 1:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50277
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 7
ack_num     : 1025
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 2:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 53353
dest addr   : 128.111.68.197
src port    : 37033
src addr    : 192.168.126.135
seq_num     : 1025
ack_num     : 0
total_bytes : 1599
data        :  simple HTTP proxy server, you need to be able to perform the following
operations:
1. Parse the HTTP request line from the clie
--------------------------------------
==============Thread 2:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50279
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 8
ack_num     : 1153
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 3:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 45191
dest addr   : 128.111.68.197
src port    : 45641
src addr    : 192.168.126.135
seq_num     : 1153
ack_num     : 0
total_bytes : 1599
data        : nt
a. In an HTTP request message, there are request header and request contentÍ¾ and
in the request header, the first line is ca
--------------------------------------
==============Thread 3:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50278
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 9
ack_num     : 1281
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 1:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 47614
dest addr   : 128.111.68.197
src port    : 59808
src addr    : 192.168.126.135
seq_num     : 1281
ack_num     : 0
total_bytes : 1599
data        : lled request line. Request line consists of
request method, request URI and the protocol version.
b. From the request URI you ne
--------------------------------------
==============Thread 1:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50277
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 10
ack_num     : 1409
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 3:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 45191
dest addr   : 128.111.68.197
src port    : 45641
src addr    : 192.168.126.135
seq_num     : 1409
ack_num     : 0
total_bytes : 1599
data        : ed to identify the server to contact.
c. You are supposed to handle methods specified in protocol HTTP/1.1 in this
assignment.
i
--------------------------------------
==============Thread 3:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50278
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 11
ack_num     : 1537
total_bytes : 0
data        : Ô
--------------------------------------
==============Thread 1:==============
--------SEND-SEND-SEND-SEND--------
dest port   : 47614
dest addr   : 128.111.68.197
src port    : 59808
src addr    : 192.168.126.135
seq_num     : 1537
ack_num     : 0
total_bytes : 1599
data        : . Note: You donâ€™t need to handle CONNECT command in this part
--------------------------------------
==============Thread 1:==============
--------RECEIVE-RECEIVE-RECEIVE--------
dest port   : 50277
dest addr   : 169.231.128.117
src port    : 5176
src addr    : 128.111.68.197
seq_num     : 12
ack_num     : -1
total_bytes : 0
data        : Ô
--------------------------------------
